{"ast":null,"code":"import { point, latLng } from 'leaflet';\nimport { Task } from './Task';\nimport { warn, responseToFeatureCollection, isArcgisOnline, extentToBounds, _setGeometry } from '../Util';\nexport var Query = Task.extend({\n  setters: {\n    offset: 'resultOffset',\n    limit: 'resultRecordCount',\n    fields: 'outFields',\n    precision: 'geometryPrecision',\n    featureIds: 'objectIds',\n    returnGeometry: 'returnGeometry',\n    returnM: 'returnM',\n    transform: 'datumTransformation',\n    token: 'token'\n  },\n  path: 'query',\n  params: {\n    returnGeometry: true,\n    where: '1=1',\n    outSR: 4326,\n    outFields: '*'\n  },\n  // Returns a feature if its shape is wholly contained within the search geometry. Valid for all shape type combinations.\n  within: function (geometry) {\n    this._setGeometryParams(geometry);\n\n    this.params.spatialRel = 'esriSpatialRelContains'; // to the REST api this reads geometry **contains** layer\n\n    return this;\n  },\n  // Returns a feature if any spatial relationship is found. Applies to all shape type combinations.\n  intersects: function (geometry) {\n    this._setGeometryParams(geometry);\n\n    this.params.spatialRel = 'esriSpatialRelIntersects';\n    return this;\n  },\n  // Returns a feature if its shape wholly contains the search geometry. Valid for all shape type combinations.\n  contains: function (geometry) {\n    this._setGeometryParams(geometry);\n\n    this.params.spatialRel = 'esriSpatialRelWithin'; // to the REST api this reads geometry **within** layer\n\n    return this;\n  },\n  // Returns a feature if the intersection of the interiors of the two shapes is not empty and has a lower dimension than the maximum dimension of the two shapes. Two lines that share an endpoint in common do not cross. Valid for Line/Line, Line/Area, Multi-point/Area, and Multi-point/Line shape type combinations.\n  crosses: function (geometry) {\n    this._setGeometryParams(geometry);\n\n    this.params.spatialRel = 'esriSpatialRelCrosses';\n    return this;\n  },\n  // Returns a feature if the two shapes share a common boundary. However, the intersection of the interiors of the two shapes must be empty. In the Point/Line case, the point may touch an endpoint only of the line. Applies to all combinations except Point/Point.\n  touches: function (geometry) {\n    this._setGeometryParams(geometry);\n\n    this.params.spatialRel = 'esriSpatialRelTouches';\n    return this;\n  },\n  // Returns a feature if the intersection of the two shapes results in an object of the same dimension, but different from both of the shapes. Applies to Area/Area, Line/Line, and Multi-point/Multi-point shape type combinations.\n  overlaps: function (geometry) {\n    this._setGeometryParams(geometry);\n\n    this.params.spatialRel = 'esriSpatialRelOverlaps';\n    return this;\n  },\n  // Returns a feature if the envelope of the two shapes intersects.\n  bboxIntersects: function (geometry) {\n    this._setGeometryParams(geometry);\n\n    this.params.spatialRel = 'esriSpatialRelEnvelopeIntersects';\n    return this;\n  },\n  // if someone can help decipher the ArcObjects explanation and translate to plain speak, we should mention this method in the doc\n  indexIntersects: function (geometry) {\n    this._setGeometryParams(geometry);\n\n    this.params.spatialRel = 'esriSpatialRelIndexIntersects'; // Returns a feature if the envelope of the query geometry intersects the index entry for the target geometry\n\n    return this;\n  },\n  // only valid for Feature Services running on ArcGIS Server 10.3+ or ArcGIS Online\n  nearby: function (latlng, radius) {\n    latlng = latLng(latlng);\n    this.params.geometry = [latlng.lng, latlng.lat];\n    this.params.geometryType = 'esriGeometryPoint';\n    this.params.spatialRel = 'esriSpatialRelIntersects';\n    this.params.units = 'esriSRUnit_Meter';\n    this.params.distance = radius;\n    this.params.inSR = 4326;\n    return this;\n  },\n  where: function (string) {\n    // instead of converting double-quotes to single quotes, pass as is, and provide a more informative message if a 400 is encountered\n    this.params.where = string;\n    return this;\n  },\n  between: function (start, end) {\n    this.params.time = [start.valueOf(), end.valueOf()];\n    return this;\n  },\n  simplify: function (map, factor) {\n    var mapWidth = Math.abs(map.getBounds().getWest() - map.getBounds().getEast());\n    this.params.maxAllowableOffset = mapWidth / map.getSize().y * factor;\n    return this;\n  },\n  orderBy: function (fieldName, order) {\n    order = order || 'ASC';\n    this.params.orderByFields = this.params.orderByFields ? this.params.orderByFields + ',' : '';\n    this.params.orderByFields += [fieldName, order].join(' ');\n    return this;\n  },\n  run: function (callback, context) {\n    this._cleanParams(); // services hosted on ArcGIS Online and ArcGIS Server 10.3.1+ support requesting geojson directly\n\n\n    if (this.options.isModern || isArcgisOnline(this.options.url) && this.options.isModern === undefined) {\n      this.params.f = 'geojson';\n      return this.request(function (error, response) {\n        this._trapSQLerrors(error);\n\n        callback.call(context, error, response, response);\n      }, this); // otherwise convert it in the callback then pass it on\n    } else {\n      return this.request(function (error, response) {\n        this._trapSQLerrors(error);\n\n        callback.call(context, error, response && responseToFeatureCollection(response), response);\n      }, this);\n    }\n  },\n  count: function (callback, context) {\n    this._cleanParams();\n\n    this.params.returnCountOnly = true;\n    return this.request(function (error, response) {\n      callback.call(this, error, response && response.count, response);\n    }, context);\n  },\n  ids: function (callback, context) {\n    this._cleanParams();\n\n    this.params.returnIdsOnly = true;\n    return this.request(function (error, response) {\n      callback.call(this, error, response && response.objectIds, response);\n    }, context);\n  },\n  // only valid for Feature Services running on ArcGIS Server 10.3+ or ArcGIS Online\n  bounds: function (callback, context) {\n    this._cleanParams();\n\n    this.params.returnExtentOnly = true;\n    return this.request(function (error, response) {\n      if (response && response.extent && extentToBounds(response.extent)) {\n        callback.call(context, error, extentToBounds(response.extent), response);\n      } else {\n        error = {\n          message: 'Invalid Bounds'\n        };\n        callback.call(context, error, null, response);\n      }\n    }, context);\n  },\n  distinct: function () {\n    // geometry must be omitted for queries requesting distinct values\n    this.params.returnGeometry = false;\n    this.params.returnDistinctValues = true;\n    return this;\n  },\n  // only valid for image services\n  pixelSize: function (rawPoint) {\n    var castPoint = point(rawPoint);\n    this.params.pixelSize = [castPoint.x, castPoint.y];\n    return this;\n  },\n  // only valid for map services\n  layer: function (layer) {\n    this.path = layer + '/query';\n    return this;\n  },\n  _trapSQLerrors: function (error) {\n    if (error) {\n      if (error.code === '400') {\n        warn('one common syntax error in query requests is encasing string values in double quotes instead of single quotes');\n      }\n    }\n  },\n  _cleanParams: function () {\n    delete this.params.returnIdsOnly;\n    delete this.params.returnExtentOnly;\n    delete this.params.returnCountOnly;\n  },\n  _setGeometryParams: function (geometry) {\n    this.params.inSR = 4326;\n\n    var converted = _setGeometry(geometry);\n\n    this.params.geometry = converted.geometry;\n    this.params.geometryType = converted.geometryType;\n  }\n});\nexport function query(options) {\n  return new Query(options);\n}\nexport default query;","map":{"version":3,"names":["point","latLng","Task","warn","responseToFeatureCollection","isArcgisOnline","extentToBounds","_setGeometry","Query","extend","setters","offset","limit","fields","precision","featureIds","returnGeometry","returnM","transform","token","path","params","where","outSR","outFields","within","geometry","_setGeometryParams","spatialRel","intersects","contains","crosses","touches","overlaps","bboxIntersects","indexIntersects","nearby","latlng","radius","lng","lat","geometryType","units","distance","inSR","string","between","start","end","time","valueOf","simplify","map","factor","mapWidth","Math","abs","getBounds","getWest","getEast","maxAllowableOffset","getSize","y","orderBy","fieldName","order","orderByFields","join","run","callback","context","_cleanParams","options","isModern","url","undefined","f","request","error","response","_trapSQLerrors","call","count","returnCountOnly","ids","returnIdsOnly","objectIds","bounds","returnExtentOnly","extent","message","distinct","returnDistinctValues","pixelSize","rawPoint","castPoint","x","layer","code","converted","query"],"sources":["C:/Users/Larix/Documents/Programmieren/ABSCHLUSS/wbs-final-box-fe/node_modules/esri-leaflet/src/Tasks/Query.js"],"sourcesContent":["import { point, latLng } from 'leaflet';\r\nimport { Task } from './Task';\r\nimport {\r\n  warn,\r\n  responseToFeatureCollection,\r\n  isArcgisOnline,\r\n  extentToBounds,\r\n  _setGeometry\r\n} from '../Util';\r\n\r\nexport var Query = Task.extend({\r\n  setters: {\r\n    offset: 'resultOffset',\r\n    limit: 'resultRecordCount',\r\n    fields: 'outFields',\r\n    precision: 'geometryPrecision',\r\n    featureIds: 'objectIds',\r\n    returnGeometry: 'returnGeometry',\r\n    returnM: 'returnM',\r\n    transform: 'datumTransformation',\r\n    token: 'token'\r\n  },\r\n\r\n  path: 'query',\r\n\r\n  params: {\r\n    returnGeometry: true,\r\n    where: '1=1',\r\n    outSR: 4326,\r\n    outFields: '*'\r\n  },\r\n\r\n  // Returns a feature if its shape is wholly contained within the search geometry. Valid for all shape type combinations.\r\n  within: function (geometry) {\r\n    this._setGeometryParams(geometry);\r\n    this.params.spatialRel = 'esriSpatialRelContains'; // to the REST api this reads geometry **contains** layer\r\n    return this;\r\n  },\r\n\r\n  // Returns a feature if any spatial relationship is found. Applies to all shape type combinations.\r\n  intersects: function (geometry) {\r\n    this._setGeometryParams(geometry);\r\n    this.params.spatialRel = 'esriSpatialRelIntersects';\r\n    return this;\r\n  },\r\n\r\n  // Returns a feature if its shape wholly contains the search geometry. Valid for all shape type combinations.\r\n  contains: function (geometry) {\r\n    this._setGeometryParams(geometry);\r\n    this.params.spatialRel = 'esriSpatialRelWithin'; // to the REST api this reads geometry **within** layer\r\n    return this;\r\n  },\r\n\r\n  // Returns a feature if the intersection of the interiors of the two shapes is not empty and has a lower dimension than the maximum dimension of the two shapes. Two lines that share an endpoint in common do not cross. Valid for Line/Line, Line/Area, Multi-point/Area, and Multi-point/Line shape type combinations.\r\n  crosses: function (geometry) {\r\n    this._setGeometryParams(geometry);\r\n    this.params.spatialRel = 'esriSpatialRelCrosses';\r\n    return this;\r\n  },\r\n\r\n  // Returns a feature if the two shapes share a common boundary. However, the intersection of the interiors of the two shapes must be empty. In the Point/Line case, the point may touch an endpoint only of the line. Applies to all combinations except Point/Point.\r\n  touches: function (geometry) {\r\n    this._setGeometryParams(geometry);\r\n    this.params.spatialRel = 'esriSpatialRelTouches';\r\n    return this;\r\n  },\r\n\r\n  // Returns a feature if the intersection of the two shapes results in an object of the same dimension, but different from both of the shapes. Applies to Area/Area, Line/Line, and Multi-point/Multi-point shape type combinations.\r\n  overlaps: function (geometry) {\r\n    this._setGeometryParams(geometry);\r\n    this.params.spatialRel = 'esriSpatialRelOverlaps';\r\n    return this;\r\n  },\r\n\r\n  // Returns a feature if the envelope of the two shapes intersects.\r\n  bboxIntersects: function (geometry) {\r\n    this._setGeometryParams(geometry);\r\n    this.params.spatialRel = 'esriSpatialRelEnvelopeIntersects';\r\n    return this;\r\n  },\r\n\r\n  // if someone can help decipher the ArcObjects explanation and translate to plain speak, we should mention this method in the doc\r\n  indexIntersects: function (geometry) {\r\n    this._setGeometryParams(geometry);\r\n    this.params.spatialRel = 'esriSpatialRelIndexIntersects'; // Returns a feature if the envelope of the query geometry intersects the index entry for the target geometry\r\n    return this;\r\n  },\r\n\r\n  // only valid for Feature Services running on ArcGIS Server 10.3+ or ArcGIS Online\r\n  nearby: function (latlng, radius) {\r\n    latlng = latLng(latlng);\r\n    this.params.geometry = [latlng.lng, latlng.lat];\r\n    this.params.geometryType = 'esriGeometryPoint';\r\n    this.params.spatialRel = 'esriSpatialRelIntersects';\r\n    this.params.units = 'esriSRUnit_Meter';\r\n    this.params.distance = radius;\r\n    this.params.inSR = 4326;\r\n    return this;\r\n  },\r\n\r\n  where: function (string) {\r\n    // instead of converting double-quotes to single quotes, pass as is, and provide a more informative message if a 400 is encountered\r\n    this.params.where = string;\r\n    return this;\r\n  },\r\n\r\n  between: function (start, end) {\r\n    this.params.time = [start.valueOf(), end.valueOf()];\r\n    return this;\r\n  },\r\n\r\n  simplify: function (map, factor) {\r\n    var mapWidth = Math.abs(map.getBounds().getWest() - map.getBounds().getEast());\r\n    this.params.maxAllowableOffset = (mapWidth / map.getSize().y) * factor;\r\n    return this;\r\n  },\r\n\r\n  orderBy: function (fieldName, order) {\r\n    order = order || 'ASC';\r\n    this.params.orderByFields = (this.params.orderByFields) ? this.params.orderByFields + ',' : '';\r\n    this.params.orderByFields += ([fieldName, order]).join(' ');\r\n    return this;\r\n  },\r\n\r\n  run: function (callback, context) {\r\n    this._cleanParams();\r\n\r\n    // services hosted on ArcGIS Online and ArcGIS Server 10.3.1+ support requesting geojson directly\r\n    if (this.options.isModern || (isArcgisOnline(this.options.url) && this.options.isModern === undefined)) {\r\n      this.params.f = 'geojson';\r\n\r\n      return this.request(function (error, response) {\r\n        this._trapSQLerrors(error);\r\n        callback.call(context, error, response, response);\r\n      }, this);\r\n\r\n      // otherwise convert it in the callback then pass it on\r\n    } else {\r\n      return this.request(function (error, response) {\r\n        this._trapSQLerrors(error);\r\n        callback.call(context, error, (response && responseToFeatureCollection(response)), response);\r\n      }, this);\r\n    }\r\n  },\r\n\r\n  count: function (callback, context) {\r\n    this._cleanParams();\r\n    this.params.returnCountOnly = true;\r\n    return this.request(function (error, response) {\r\n      callback.call(this, error, (response && response.count), response);\r\n    }, context);\r\n  },\r\n\r\n  ids: function (callback, context) {\r\n    this._cleanParams();\r\n    this.params.returnIdsOnly = true;\r\n    return this.request(function (error, response) {\r\n      callback.call(this, error, (response && response.objectIds), response);\r\n    }, context);\r\n  },\r\n\r\n  // only valid for Feature Services running on ArcGIS Server 10.3+ or ArcGIS Online\r\n  bounds: function (callback, context) {\r\n    this._cleanParams();\r\n    this.params.returnExtentOnly = true;\r\n    return this.request(function (error, response) {\r\n      if (response && response.extent && extentToBounds(response.extent)) {\r\n        callback.call(context, error, extentToBounds(response.extent), response);\r\n      } else {\r\n        error = {\r\n          message: 'Invalid Bounds'\r\n        };\r\n        callback.call(context, error, null, response);\r\n      }\r\n    }, context);\r\n  },\r\n\r\n  distinct: function () {\r\n    // geometry must be omitted for queries requesting distinct values\r\n    this.params.returnGeometry = false;\r\n    this.params.returnDistinctValues = true;\r\n    return this;\r\n  },\r\n\r\n  // only valid for image services\r\n  pixelSize: function (rawPoint) {\r\n    var castPoint = point(rawPoint);\r\n    this.params.pixelSize = [castPoint.x, castPoint.y];\r\n    return this;\r\n  },\r\n\r\n  // only valid for map services\r\n  layer: function (layer) {\r\n    this.path = layer + '/query';\r\n    return this;\r\n  },\r\n\r\n  _trapSQLerrors: function (error) {\r\n    if (error) {\r\n      if (error.code === '400') {\r\n        warn('one common syntax error in query requests is encasing string values in double quotes instead of single quotes');\r\n      }\r\n    }\r\n  },\r\n\r\n  _cleanParams: function () {\r\n    delete this.params.returnIdsOnly;\r\n    delete this.params.returnExtentOnly;\r\n    delete this.params.returnCountOnly;\r\n  },\r\n\r\n  _setGeometryParams: function (geometry) {\r\n    this.params.inSR = 4326;\r\n    var converted = _setGeometry(geometry);\r\n    this.params.geometry = converted.geometry;\r\n    this.params.geometryType = converted.geometryType;\r\n  }\r\n\r\n});\r\n\r\nexport function query (options) {\r\n  return new Query(options);\r\n}\r\n\r\nexport default query;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}