{"ast":null,"code":"import { Task } from './Task';\nimport { responseToFeatureCollection } from '../Util';\nexport var Find = Task.extend({\n  setters: {\n    // method name > param name\n    contains: 'contains',\n    text: 'searchText',\n    fields: 'searchFields',\n    // denote an array or single string\n    spatialReference: 'sr',\n    sr: 'sr',\n    layers: 'layers',\n    returnGeometry: 'returnGeometry',\n    maxAllowableOffset: 'maxAllowableOffset',\n    precision: 'geometryPrecision',\n    dynamicLayers: 'dynamicLayers',\n    returnZ: 'returnZ',\n    returnM: 'returnM',\n    gdbVersion: 'gdbVersion',\n    // skipped implementing this (for now) because the REST service implementation isnt consistent between operations\n    // 'transform': 'datumTransformations',\n    token: 'token'\n  },\n  path: 'find',\n  params: {\n    sr: 4326,\n    contains: true,\n    returnGeometry: true,\n    returnZ: true,\n    returnM: false\n  },\n  layerDefs: function (id, where) {\n    this.params.layerDefs = this.params.layerDefs ? this.params.layerDefs + ';' : '';\n    this.params.layerDefs += [id, where].join(':');\n    return this;\n  },\n  simplify: function (map, factor) {\n    var mapWidth = Math.abs(map.getBounds().getWest() - map.getBounds().getEast());\n    this.params.maxAllowableOffset = mapWidth / map.getSize().y * factor;\n    return this;\n  },\n  run: function (callback, context) {\n    return this.request(function (error, response) {\n      callback.call(context, error, response && responseToFeatureCollection(response), response);\n    }, context);\n  }\n});\nexport function find(options) {\n  return new Find(options);\n}\nexport default find;","map":{"version":3,"names":["Task","responseToFeatureCollection","Find","extend","setters","contains","text","fields","spatialReference","sr","layers","returnGeometry","maxAllowableOffset","precision","dynamicLayers","returnZ","returnM","gdbVersion","token","path","params","layerDefs","id","where","join","simplify","map","factor","mapWidth","Math","abs","getBounds","getWest","getEast","getSize","y","run","callback","context","request","error","response","call","find","options"],"sources":["C:/Users/Larix/Documents/Programmieren/ABSCHLUSS/wbs-final-box-fe/node_modules/esri-leaflet/src/Tasks/Find.js"],"sourcesContent":["import { Task } from './Task';\r\nimport { responseToFeatureCollection } from '../Util';\r\n\r\nexport var Find = Task.extend({\r\n  setters: {\r\n    // method name > param name\r\n    contains: 'contains',\r\n    text: 'searchText',\r\n    fields: 'searchFields', // denote an array or single string\r\n    spatialReference: 'sr',\r\n    sr: 'sr',\r\n    layers: 'layers',\r\n    returnGeometry: 'returnGeometry',\r\n    maxAllowableOffset: 'maxAllowableOffset',\r\n    precision: 'geometryPrecision',\r\n    dynamicLayers: 'dynamicLayers',\r\n    returnZ: 'returnZ',\r\n    returnM: 'returnM',\r\n    gdbVersion: 'gdbVersion',\r\n    // skipped implementing this (for now) because the REST service implementation isnt consistent between operations\r\n    // 'transform': 'datumTransformations',\r\n    token: 'token'\r\n  },\r\n\r\n  path: 'find',\r\n\r\n  params: {\r\n    sr: 4326,\r\n    contains: true,\r\n    returnGeometry: true,\r\n    returnZ: true,\r\n    returnM: false\r\n  },\r\n\r\n  layerDefs: function (id, where) {\r\n    this.params.layerDefs = (this.params.layerDefs) ? this.params.layerDefs + ';' : '';\r\n    this.params.layerDefs += ([id, where]).join(':');\r\n    return this;\r\n  },\r\n\r\n  simplify: function (map, factor) {\r\n    var mapWidth = Math.abs(map.getBounds().getWest() - map.getBounds().getEast());\r\n    this.params.maxAllowableOffset = (mapWidth / map.getSize().y) * factor;\r\n    return this;\r\n  },\r\n\r\n  run: function (callback, context) {\r\n    return this.request(function (error, response) {\r\n      callback.call(context, error, (response && responseToFeatureCollection(response)), response);\r\n    }, context);\r\n  }\r\n});\r\n\r\nexport function find (options) {\r\n  return new Find(options);\r\n}\r\n\r\nexport default find;\r\n"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,2BAAT,QAA4C,SAA5C;AAEA,OAAO,IAAIC,IAAI,GAAGF,IAAI,CAACG,MAAL,CAAY;EAC5BC,OAAO,EAAE;IACP;IACAC,QAAQ,EAAE,UAFH;IAGPC,IAAI,EAAE,YAHC;IAIPC,MAAM,EAAE,cAJD;IAIiB;IACxBC,gBAAgB,EAAE,IALX;IAMPC,EAAE,EAAE,IANG;IAOPC,MAAM,EAAE,QAPD;IAQPC,cAAc,EAAE,gBART;IASPC,kBAAkB,EAAE,oBATb;IAUPC,SAAS,EAAE,mBAVJ;IAWPC,aAAa,EAAE,eAXR;IAYPC,OAAO,EAAE,SAZF;IAaPC,OAAO,EAAE,SAbF;IAcPC,UAAU,EAAE,YAdL;IAeP;IACA;IACAC,KAAK,EAAE;EAjBA,CADmB;EAqB5BC,IAAI,EAAE,MArBsB;EAuB5BC,MAAM,EAAE;IACNX,EAAE,EAAE,IADE;IAENJ,QAAQ,EAAE,IAFJ;IAGNM,cAAc,EAAE,IAHV;IAINI,OAAO,EAAE,IAJH;IAKNC,OAAO,EAAE;EALH,CAvBoB;EA+B5BK,SAAS,EAAE,UAAUC,EAAV,EAAcC,KAAd,EAAqB;IAC9B,KAAKH,MAAL,CAAYC,SAAZ,GAAyB,KAAKD,MAAL,CAAYC,SAAb,GAA0B,KAAKD,MAAL,CAAYC,SAAZ,GAAwB,GAAlD,GAAwD,EAAhF;IACA,KAAKD,MAAL,CAAYC,SAAZ,IAA0B,CAACC,EAAD,EAAKC,KAAL,CAAD,CAAcC,IAAd,CAAmB,GAAnB,CAAzB;IACA,OAAO,IAAP;EACD,CAnC2B;EAqC5BC,QAAQ,EAAE,UAAUC,GAAV,EAAeC,MAAf,EAAuB;IAC/B,IAAIC,QAAQ,GAAGC,IAAI,CAACC,GAAL,CAASJ,GAAG,CAACK,SAAJ,GAAgBC,OAAhB,KAA4BN,GAAG,CAACK,SAAJ,GAAgBE,OAAhB,EAArC,CAAf;IACA,KAAKb,MAAL,CAAYR,kBAAZ,GAAkCgB,QAAQ,GAAGF,GAAG,CAACQ,OAAJ,GAAcC,CAA1B,GAA+BR,MAAhE;IACA,OAAO,IAAP;EACD,CAzC2B;EA2C5BS,GAAG,EAAE,UAAUC,QAAV,EAAoBC,OAApB,EAA6B;IAChC,OAAO,KAAKC,OAAL,CAAa,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;MAC7CJ,QAAQ,CAACK,IAAT,CAAcJ,OAAd,EAAuBE,KAAvB,EAA+BC,QAAQ,IAAIxC,2BAA2B,CAACwC,QAAD,CAAtE,EAAmFA,QAAnF;IACD,CAFM,EAEJH,OAFI,CAAP;EAGD;AA/C2B,CAAZ,CAAX;AAkDP,OAAO,SAASK,IAAT,CAAeC,OAAf,EAAwB;EAC7B,OAAO,IAAI1C,IAAJ,CAAS0C,OAAT,CAAP;AACD;AAED,eAAeD,IAAf"},"metadata":{},"sourceType":"module"}