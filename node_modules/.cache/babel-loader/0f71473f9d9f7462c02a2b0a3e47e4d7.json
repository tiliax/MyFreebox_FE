{"ast":null,"code":"import { Util } from 'leaflet';\nimport { RasterLayer } from './RasterLayer';\nimport { getUrlParams } from '../Util';\nimport imageService from '../Services/ImageService';\nexport var ImageMapLayer = RasterLayer.extend({\n  options: {\n    updateInterval: 150,\n    format: 'jpgpng',\n    transparent: true,\n    f: 'image'\n  },\n  query: function () {\n    return this.service.query();\n  },\n  identify: function () {\n    return this.service.identify();\n  },\n  initialize: function (options) {\n    options = getUrlParams(options);\n    this.service = imageService(options);\n    this.service.addEventParent(this);\n    Util.setOptions(this, options);\n  },\n  setPixelType: function (pixelType) {\n    this.options.pixelType = pixelType;\n\n    this._update();\n\n    return this;\n  },\n  getPixelType: function () {\n    return this.options.pixelType;\n  },\n  setBandIds: function (bandIds) {\n    if (Util.isArray(bandIds)) {\n      this.options.bandIds = bandIds.join(',');\n    } else {\n      this.options.bandIds = bandIds.toString();\n    }\n\n    this._update();\n\n    return this;\n  },\n  getBandIds: function () {\n    return this.options.bandIds;\n  },\n  setNoData: function (noData, noDataInterpretation) {\n    if (Util.isArray(noData)) {\n      this.options.noData = noData.join(',');\n    } else {\n      this.options.noData = noData.toString();\n    }\n\n    if (noDataInterpretation) {\n      this.options.noDataInterpretation = noDataInterpretation;\n    }\n\n    this._update();\n\n    return this;\n  },\n  getNoData: function () {\n    return this.options.noData;\n  },\n  getNoDataInterpretation: function () {\n    return this.options.noDataInterpretation;\n  },\n  setRenderingRule: function (renderingRule) {\n    this.options.renderingRule = renderingRule;\n\n    this._update();\n  },\n  getRenderingRule: function () {\n    return this.options.renderingRule;\n  },\n  setMosaicRule: function (mosaicRule) {\n    this.options.mosaicRule = mosaicRule;\n\n    this._update();\n  },\n  getMosaicRule: function () {\n    return this.options.mosaicRule;\n  },\n  _getPopupData: function (e) {\n    var callback = Util.bind(function (error, results, response) {\n      if (error) {\n        return;\n      } // we really can't do anything here but authenticate or requesterror will fire\n\n\n      setTimeout(Util.bind(function () {\n        this._renderPopup(e.latlng, error, results, response);\n      }, this), 300);\n    }, this);\n    var identifyRequest = this.identify().at(e.latlng); // set mosaic rule for identify task if it is set for layer\n\n    if (this.options.mosaicRule) {\n      identifyRequest.setMosaicRule(this.options.mosaicRule); // @TODO: force return catalog items too?\n    } // @TODO: set rendering rule? Not sure,\n    // sometimes you want raw pixel values\n    // if (this.options.renderingRule) {\n    //   identifyRequest.setRenderingRule(this.options.renderingRule);\n    // }\n\n\n    identifyRequest.run(callback); // set the flags to show the popup\n\n    this._shouldRenderPopup = true;\n    this._lastClick = e.latlng;\n  },\n  _buildExportParams: function () {\n    var sr = parseInt(this._map.options.crs.code.split(':')[1], 10);\n    var params = {\n      bbox: this._calculateBbox(),\n      size: this._calculateImageSize(),\n      format: this.options.format,\n      transparent: this.options.transparent,\n      bboxSR: sr,\n      imageSR: sr\n    };\n\n    if (this.options.from && this.options.to) {\n      params.time = this.options.from.valueOf() + ',' + this.options.to.valueOf();\n    }\n\n    if (this.options.pixelType) {\n      params.pixelType = this.options.pixelType;\n    }\n\n    if (this.options.interpolation) {\n      params.interpolation = this.options.interpolation;\n    }\n\n    if (this.options.compressionQuality) {\n      params.compressionQuality = this.options.compressionQuality;\n    }\n\n    if (this.options.bandIds) {\n      params.bandIds = this.options.bandIds;\n    } // 0 is falsy *and* a valid input parameter\n\n\n    if (this.options.noData === 0 || this.options.noData) {\n      params.noData = this.options.noData;\n    }\n\n    if (this.options.noDataInterpretation) {\n      params.noDataInterpretation = this.options.noDataInterpretation;\n    }\n\n    if (this.service.options.token) {\n      params.token = this.service.options.token;\n    }\n\n    if (this.options.renderingRule) {\n      params.renderingRule = JSON.stringify(this.options.renderingRule);\n    }\n\n    if (this.options.mosaicRule) {\n      params.mosaicRule = JSON.stringify(this.options.mosaicRule);\n    }\n\n    return params;\n  },\n  _requestExport: function (params, bounds) {\n    if (this.options.f === 'json') {\n      this.service.request('exportImage', params, function (error, response) {\n        if (error) {\n          return;\n        } // we really can't do anything here but authenticate or requesterror will fire\n\n\n        if (this.options.token) {\n          response.href += '?token=' + this.options.token;\n        }\n\n        if (this.options.proxy) {\n          response.href = this.options.proxy + '?' + response.href;\n        }\n\n        this._renderImage(response.href, bounds);\n      }, this);\n    } else {\n      params.f = 'image';\n      var fullUrl = this.options.url + 'exportImage' + Util.getParamString(params);\n\n      if (this.options.proxy) {\n        fullUrl = this.options.proxy + '?' + fullUrl;\n      }\n\n      this._renderImage(fullUrl, bounds);\n    }\n  }\n});\nexport function imageMapLayer(url, options) {\n  return new ImageMapLayer(url, options);\n}\nexport default imageMapLayer;","map":{"version":3,"names":["Util","RasterLayer","getUrlParams","imageService","ImageMapLayer","extend","options","updateInterval","format","transparent","f","query","service","identify","initialize","addEventParent","setOptions","setPixelType","pixelType","_update","getPixelType","setBandIds","bandIds","isArray","join","toString","getBandIds","setNoData","noData","noDataInterpretation","getNoData","getNoDataInterpretation","setRenderingRule","renderingRule","getRenderingRule","setMosaicRule","mosaicRule","getMosaicRule","_getPopupData","e","callback","bind","error","results","response","setTimeout","_renderPopup","latlng","identifyRequest","at","run","_shouldRenderPopup","_lastClick","_buildExportParams","sr","parseInt","_map","crs","code","split","params","bbox","_calculateBbox","size","_calculateImageSize","bboxSR","imageSR","from","to","time","valueOf","interpolation","compressionQuality","token","JSON","stringify","_requestExport","bounds","request","href","proxy","_renderImage","fullUrl","url","getParamString","imageMapLayer"],"sources":["C:/Users/Larix/Documents/Programmieren/ABSCHLUSS/wbs-final-box-fe/node_modules/esri-leaflet/src/Layers/ImageMapLayer.js"],"sourcesContent":["import { Util } from 'leaflet';\r\nimport { RasterLayer } from './RasterLayer';\r\nimport { getUrlParams } from '../Util';\r\nimport imageService from '../Services/ImageService';\r\n\r\nexport var ImageMapLayer = RasterLayer.extend({\r\n\r\n  options: {\r\n    updateInterval: 150,\r\n    format: 'jpgpng',\r\n    transparent: true,\r\n    f: 'image'\r\n  },\r\n\r\n  query: function () {\r\n    return this.service.query();\r\n  },\r\n\r\n  identify: function () {\r\n    return this.service.identify();\r\n  },\r\n\r\n  initialize: function (options) {\r\n    options = getUrlParams(options);\r\n    this.service = imageService(options);\r\n    this.service.addEventParent(this);\r\n\r\n    Util.setOptions(this, options);\r\n  },\r\n\r\n  setPixelType: function (pixelType) {\r\n    this.options.pixelType = pixelType;\r\n    this._update();\r\n    return this;\r\n  },\r\n\r\n  getPixelType: function () {\r\n    return this.options.pixelType;\r\n  },\r\n\r\n  setBandIds: function (bandIds) {\r\n    if (Util.isArray(bandIds)) {\r\n      this.options.bandIds = bandIds.join(',');\r\n    } else {\r\n      this.options.bandIds = bandIds.toString();\r\n    }\r\n    this._update();\r\n    return this;\r\n  },\r\n\r\n  getBandIds: function () {\r\n    return this.options.bandIds;\r\n  },\r\n\r\n  setNoData: function (noData, noDataInterpretation) {\r\n    if (Util.isArray(noData)) {\r\n      this.options.noData = noData.join(',');\r\n    } else {\r\n      this.options.noData = noData.toString();\r\n    }\r\n    if (noDataInterpretation) {\r\n      this.options.noDataInterpretation = noDataInterpretation;\r\n    }\r\n    this._update();\r\n    return this;\r\n  },\r\n\r\n  getNoData: function () {\r\n    return this.options.noData;\r\n  },\r\n\r\n  getNoDataInterpretation: function () {\r\n    return this.options.noDataInterpretation;\r\n  },\r\n\r\n  setRenderingRule: function (renderingRule) {\r\n    this.options.renderingRule = renderingRule;\r\n    this._update();\r\n  },\r\n\r\n  getRenderingRule: function () {\r\n    return this.options.renderingRule;\r\n  },\r\n\r\n  setMosaicRule: function (mosaicRule) {\r\n    this.options.mosaicRule = mosaicRule;\r\n    this._update();\r\n  },\r\n\r\n  getMosaicRule: function () {\r\n    return this.options.mosaicRule;\r\n  },\r\n\r\n  _getPopupData: function (e) {\r\n    var callback = Util.bind(function (error, results, response) {\r\n      if (error) { return; } // we really can't do anything here but authenticate or requesterror will fire\r\n      setTimeout(Util.bind(function () {\r\n        this._renderPopup(e.latlng, error, results, response);\r\n      }, this), 300);\r\n    }, this);\r\n\r\n    var identifyRequest = this.identify().at(e.latlng);\r\n\r\n    // set mosaic rule for identify task if it is set for layer\r\n    if (this.options.mosaicRule) {\r\n      identifyRequest.setMosaicRule(this.options.mosaicRule);\r\n      // @TODO: force return catalog items too?\r\n    }\r\n\r\n    // @TODO: set rendering rule? Not sure,\r\n    // sometimes you want raw pixel values\r\n    // if (this.options.renderingRule) {\r\n    //   identifyRequest.setRenderingRule(this.options.renderingRule);\r\n    // }\r\n\r\n    identifyRequest.run(callback);\r\n\r\n    // set the flags to show the popup\r\n    this._shouldRenderPopup = true;\r\n    this._lastClick = e.latlng;\r\n  },\r\n\r\n  _buildExportParams: function () {\r\n    var sr = parseInt(this._map.options.crs.code.split(':')[1], 10);\r\n\r\n    var params = {\r\n      bbox: this._calculateBbox(),\r\n      size: this._calculateImageSize(),\r\n      format: this.options.format,\r\n      transparent: this.options.transparent,\r\n      bboxSR: sr,\r\n      imageSR: sr\r\n    };\r\n\r\n    if (this.options.from && this.options.to) {\r\n      params.time = this.options.from.valueOf() + ',' + this.options.to.valueOf();\r\n    }\r\n\r\n    if (this.options.pixelType) {\r\n      params.pixelType = this.options.pixelType;\r\n    }\r\n\r\n    if (this.options.interpolation) {\r\n      params.interpolation = this.options.interpolation;\r\n    }\r\n\r\n    if (this.options.compressionQuality) {\r\n      params.compressionQuality = this.options.compressionQuality;\r\n    }\r\n\r\n    if (this.options.bandIds) {\r\n      params.bandIds = this.options.bandIds;\r\n    }\r\n\r\n    // 0 is falsy *and* a valid input parameter\r\n    if (this.options.noData === 0 || this.options.noData) {\r\n      params.noData = this.options.noData;\r\n    }\r\n\r\n    if (this.options.noDataInterpretation) {\r\n      params.noDataInterpretation = this.options.noDataInterpretation;\r\n    }\r\n\r\n    if (this.service.options.token) {\r\n      params.token = this.service.options.token;\r\n    }\r\n\r\n    if (this.options.renderingRule) {\r\n      params.renderingRule = JSON.stringify(this.options.renderingRule);\r\n    }\r\n\r\n    if (this.options.mosaicRule) {\r\n      params.mosaicRule = JSON.stringify(this.options.mosaicRule);\r\n    }\r\n\r\n    return params;\r\n  },\r\n\r\n  _requestExport: function (params, bounds) {\r\n    if (this.options.f === 'json') {\r\n      this.service.request('exportImage', params, function (error, response) {\r\n        if (error) { return; } // we really can't do anything here but authenticate or requesterror will fire\r\n        if (this.options.token) {\r\n          response.href += ('?token=' + this.options.token);\r\n        }\r\n        if (this.options.proxy) {\r\n          response.href = this.options.proxy + '?' + response.href;\r\n        }\r\n        this._renderImage(response.href, bounds);\r\n      }, this);\r\n    } else {\r\n      params.f = 'image';\r\n      var fullUrl = this.options.url + 'exportImage' + Util.getParamString(params);\r\n      if (this.options.proxy) {\r\n        fullUrl = this.options.proxy + '?' + fullUrl;\r\n      }\r\n      this._renderImage(fullUrl, bounds);\r\n    }\r\n  }\r\n});\r\n\r\nexport function imageMapLayer (url, options) {\r\n  return new ImageMapLayer(url, options);\r\n}\r\n\r\nexport default imageMapLayer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}