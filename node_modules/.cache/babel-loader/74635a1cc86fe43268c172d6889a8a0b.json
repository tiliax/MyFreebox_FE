{"ast":null,"code":"import { latLng } from 'leaflet';\nimport { Identify } from './Identify';\nimport { responseToFeatureCollection } from '../Util';\nexport var IdentifyImage = Identify.extend({\n  setters: {\n    setMosaicRule: 'mosaicRule',\n    setRenderingRule: 'renderingRule',\n    setPixelSize: 'pixelSize',\n    returnCatalogItems: 'returnCatalogItems',\n    returnGeometry: 'returnGeometry'\n  },\n  params: {\n    returnGeometry: false\n  },\n  at: function (latlng) {\n    latlng = latLng(latlng);\n    this.params.geometry = JSON.stringify({\n      x: latlng.lng,\n      y: latlng.lat,\n      spatialReference: {\n        wkid: 4326\n      }\n    });\n    this.params.geometryType = 'esriGeometryPoint';\n    return this;\n  },\n  getMosaicRule: function () {\n    return this.params.mosaicRule;\n  },\n  getRenderingRule: function () {\n    return this.params.renderingRule;\n  },\n  getPixelSize: function () {\n    return this.params.pixelSize;\n  },\n  run: function (callback, context) {\n    return this.request(function (error, response) {\n      callback.call(context, error, response && this._responseToGeoJSON(response), response);\n    }, this);\n  },\n  // get pixel data and return as geoJSON point\n  // populate catalog items (if any)\n  // merging in any catalogItemVisibilities as a propery of each feature\n  _responseToGeoJSON: function (response) {\n    var location = response.location;\n    var catalogItems = response.catalogItems;\n    var catalogItemVisibilities = response.catalogItemVisibilities;\n    var geoJSON = {\n      pixel: {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [location.x, location.y]\n        },\n        crs: {\n          type: 'EPSG',\n          properties: {\n            code: location.spatialReference.wkid\n          }\n        },\n        properties: {\n          OBJECTID: response.objectId,\n          name: response.name,\n          value: response.value\n        },\n        id: response.objectId\n      }\n    };\n\n    if (response.properties && response.properties.Values) {\n      geoJSON.pixel.properties.values = response.properties.Values;\n    }\n\n    if (catalogItems && catalogItems.features) {\n      geoJSON.catalogItems = responseToFeatureCollection(catalogItems);\n\n      if (catalogItemVisibilities && catalogItemVisibilities.length === geoJSON.catalogItems.features.length) {\n        for (var i = catalogItemVisibilities.length - 1; i >= 0; i--) {\n          geoJSON.catalogItems.features[i].properties.catalogItemVisibility = catalogItemVisibilities[i];\n        }\n      }\n    }\n\n    return geoJSON;\n  }\n});\nexport function identifyImage(params) {\n  return new IdentifyImage(params);\n}\nexport default identifyImage;","map":{"version":3,"names":["latLng","Identify","responseToFeatureCollection","IdentifyImage","extend","setters","setMosaicRule","setRenderingRule","setPixelSize","returnCatalogItems","returnGeometry","params","at","latlng","geometry","JSON","stringify","x","lng","y","lat","spatialReference","wkid","geometryType","getMosaicRule","mosaicRule","getRenderingRule","renderingRule","getPixelSize","pixelSize","run","callback","context","request","error","response","call","_responseToGeoJSON","location","catalogItems","catalogItemVisibilities","geoJSON","pixel","type","coordinates","crs","properties","code","OBJECTID","objectId","name","value","id","Values","values","features","length","i","catalogItemVisibility","identifyImage"],"sources":["C:/Users/Larix/Documents/Programmieren/ABSCHLUSS/wbs-final-box-fe/node_modules/esri-leaflet/src/Tasks/IdentifyImage.js"],"sourcesContent":["import { latLng } from 'leaflet';\r\nimport { Identify } from './Identify';\r\nimport { responseToFeatureCollection } from '../Util';\r\n\r\nexport var IdentifyImage = Identify.extend({\r\n  setters: {\r\n    setMosaicRule: 'mosaicRule',\r\n    setRenderingRule: 'renderingRule',\r\n    setPixelSize: 'pixelSize',\r\n    returnCatalogItems: 'returnCatalogItems',\r\n    returnGeometry: 'returnGeometry'\r\n  },\r\n\r\n  params: {\r\n    returnGeometry: false\r\n  },\r\n\r\n  at: function (latlng) {\r\n    latlng = latLng(latlng);\r\n    this.params.geometry = JSON.stringify({\r\n      x: latlng.lng,\r\n      y: latlng.lat,\r\n      spatialReference: {\r\n        wkid: 4326\r\n      }\r\n    });\r\n    this.params.geometryType = 'esriGeometryPoint';\r\n    return this;\r\n  },\r\n\r\n  getMosaicRule: function () {\r\n    return this.params.mosaicRule;\r\n  },\r\n\r\n  getRenderingRule: function () {\r\n    return this.params.renderingRule;\r\n  },\r\n\r\n  getPixelSize: function () {\r\n    return this.params.pixelSize;\r\n  },\r\n\r\n  run: function (callback, context) {\r\n    return this.request(function (error, response) {\r\n      callback.call(context, error, (response && this._responseToGeoJSON(response)), response);\r\n    }, this);\r\n  },\r\n\r\n  // get pixel data and return as geoJSON point\r\n  // populate catalog items (if any)\r\n  // merging in any catalogItemVisibilities as a propery of each feature\r\n  _responseToGeoJSON: function (response) {\r\n    var location = response.location;\r\n    var catalogItems = response.catalogItems;\r\n    var catalogItemVisibilities = response.catalogItemVisibilities;\r\n    var geoJSON = {\r\n      pixel: {\r\n        type: 'Feature',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [location.x, location.y]\r\n        },\r\n        crs: {\r\n          type: 'EPSG',\r\n          properties: {\r\n            code: location.spatialReference.wkid\r\n          }\r\n        },\r\n        properties: {\r\n          OBJECTID: response.objectId,\r\n          name: response.name,\r\n          value: response.value\r\n        },\r\n        id: response.objectId\r\n      }\r\n    };\r\n\r\n    if (response.properties && response.properties.Values) {\r\n      geoJSON.pixel.properties.values = response.properties.Values;\r\n    }\r\n\r\n    if (catalogItems && catalogItems.features) {\r\n      geoJSON.catalogItems = responseToFeatureCollection(catalogItems);\r\n      if (catalogItemVisibilities && catalogItemVisibilities.length === geoJSON.catalogItems.features.length) {\r\n        for (var i = catalogItemVisibilities.length - 1; i >= 0; i--) {\r\n          geoJSON.catalogItems.features[i].properties.catalogItemVisibility = catalogItemVisibilities[i];\r\n        }\r\n      }\r\n    }\r\n    return geoJSON;\r\n  }\r\n\r\n});\r\n\r\nexport function identifyImage (params) {\r\n  return new IdentifyImage(params);\r\n}\r\n\r\nexport default identifyImage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}