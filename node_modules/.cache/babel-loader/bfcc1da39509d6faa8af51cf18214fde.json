{"ast":null,"code":"import { LeafletProvider, addClassName, useLeafletContext } from '@react-leaflet/core';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nconst DEFAULT_PANES = ['mapPane', 'markerPane', 'overlayPane', 'popupPane', 'shadowPane', 'tilePane', 'tooltipPane'];\n\nfunction omitPane(obj, pane) {\n  const {\n    [pane]: _p,\n    ...others\n  } = obj;\n  return others;\n}\n\nfunction createPane(props, context) {\n  const name = props.name;\n\n  if (DEFAULT_PANES.indexOf(name) !== -1) {\n    throw new Error(`You must use a unique name for a pane that is not a default Leaflet pane: ${name}`);\n  }\n\n  if (context.map.getPane(name) != null) {\n    throw new Error(`A pane with this name already exists: ${name}`);\n  }\n\n  const parentPaneName = props.pane ?? context.pane;\n  const parentPane = parentPaneName ? context.map.getPane(parentPaneName) : undefined;\n  const element = context.map.createPane(name, parentPane);\n\n  if (props.className != null) {\n    addClassName(element, props.className);\n  }\n\n  if (props.style != null) {\n    Object.keys(props.style).forEach(key => {\n      // @ts-ignore\n      element.style[key] = props.style[key];\n    });\n  }\n\n  return element;\n}\n\nexport function Pane(props) {\n  const [paneElement, setPaneElement] = useState();\n  const context = useLeafletContext();\n  const newContext = useMemo(() => ({ ...context,\n    pane: props.name\n  }), [context]);\n  useEffect(() => {\n    setPaneElement(createPane(props, context));\n    return function removeCreatedPane() {\n      const pane = context.map.getPane(props.name);\n      pane == null ? void 0 : pane.remove == null ? void 0 : pane.remove(); // @ts-ignore map internals\n\n      if (context.map._panes != null) {\n        // @ts-ignore map internals\n        context.map._panes = omitPane(context.map._panes, props.name); // @ts-ignore map internals\n\n        context.map._paneRenderers = omitPane( // @ts-ignore map internals\n        context.map._paneRenderers, props.name);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return props.children != null && paneElement != null ? /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(LeafletProvider, {\n    value: newContext\n  }, props.children), paneElement) : null;\n}","map":{"version":3,"names":["LeafletProvider","addClassName","useLeafletContext","React","useState","useEffect","useMemo","createPortal","DEFAULT_PANES","omitPane","obj","pane","_p","others","createPane","props","context","name","indexOf","Error","map","getPane","parentPaneName","parentPane","undefined","element","className","style","Object","keys","forEach","key","Pane","paneElement","setPaneElement","newContext","removeCreatedPane","remove","_panes","_paneRenderers","children","createElement","value"],"sources":["C:/Users/Larix/Documents/Programmieren/ABSCHLUSS/wbs-final-box-fe/node_modules/react-leaflet-geosearch/node_modules/react-leaflet/esm/Pane.js"],"sourcesContent":["import { LeafletProvider, addClassName, useLeafletContext } from '@react-leaflet/core';\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { createPortal } from 'react-dom';\nconst DEFAULT_PANES = ['mapPane', 'markerPane', 'overlayPane', 'popupPane', 'shadowPane', 'tilePane', 'tooltipPane'];\n\nfunction omitPane(obj, pane) {\n  const {\n    [pane]: _p,\n    ...others\n  } = obj;\n  return others;\n}\n\nfunction createPane(props, context) {\n  const name = props.name;\n\n  if (DEFAULT_PANES.indexOf(name) !== -1) {\n    throw new Error(`You must use a unique name for a pane that is not a default Leaflet pane: ${name}`);\n  }\n\n  if (context.map.getPane(name) != null) {\n    throw new Error(`A pane with this name already exists: ${name}`);\n  }\n\n  const parentPaneName = props.pane ?? context.pane;\n  const parentPane = parentPaneName ? context.map.getPane(parentPaneName) : undefined;\n  const element = context.map.createPane(name, parentPane);\n\n  if (props.className != null) {\n    addClassName(element, props.className);\n  }\n\n  if (props.style != null) {\n    Object.keys(props.style).forEach(key => {\n      // @ts-ignore\n      element.style[key] = props.style[key];\n    });\n  }\n\n  return element;\n}\n\nexport function Pane(props) {\n  const [paneElement, setPaneElement] = useState();\n  const context = useLeafletContext();\n  const newContext = useMemo(() => ({ ...context,\n    pane: props.name\n  }), [context]);\n  useEffect(() => {\n    setPaneElement(createPane(props, context));\n    return function removeCreatedPane() {\n      const pane = context.map.getPane(props.name);\n      pane == null ? void 0 : pane.remove == null ? void 0 : pane.remove(); // @ts-ignore map internals\n\n      if (context.map._panes != null) {\n        // @ts-ignore map internals\n        context.map._panes = omitPane(context.map._panes, props.name); // @ts-ignore map internals\n\n        context.map._paneRenderers = omitPane( // @ts-ignore map internals\n        context.map._paneRenderers, props.name);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return props.children != null && paneElement != null ? /*#__PURE__*/createPortal( /*#__PURE__*/React.createElement(LeafletProvider, {\n    value: newContext\n  }, props.children), paneElement) : null;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}