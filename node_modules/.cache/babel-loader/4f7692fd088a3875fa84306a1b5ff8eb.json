{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useMap } from \"react-leaflet\";\nimport { OpenStreetMapProvider, GeoSearchControl } from \"leaflet-geosearch\";\nimport \"leaflet-geosearch/dist/geosearch.css\";\nexport default function MapSearch(_ref) {\n  _s();\n\n  let {\n    setNewBoxData\n  } = _ref;\n  const map = useMap();\n  const provider = new OpenStreetMapProvider();\n  const search = new GeoSearchControl({\n    provider,\n    notFoundMessage: \"Sorry, that address could not be found.\",\n    style: \"bar\" //   style: \"button\"\n\n  });\n\n  const onShowLocation = result => {\n    if (result) {\n      const {\n        x,\n        y,\n        label\n      } = result.location;\n      setNewBoxData(prevData => {\n        return { ...prevData,\n          boxLocationX: x,\n          boxLocationY: y,\n          boxLocationCity: label.split(\", \").at(0)\n        };\n      });\n    }\n  };\n\n  useEffect(() => {\n    map.addControl(search);\n    map.on(\"geosearch/showlocation\", onShowLocation);\n    return () => {\n      map.removeControl(search);\n      map.off(\"geosearch/showlocation\");\n    };\n  }, []);\n  return null;\n}\n\n_s(MapSearch, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n\n_c = MapSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapSearch\");","map":{"version":3,"names":["useEffect","useMap","OpenStreetMapProvider","GeoSearchControl","MapSearch","setNewBoxData","map","provider","search","notFoundMessage","style","onShowLocation","result","x","y","label","location","prevData","boxLocationX","boxLocationY","boxLocationCity","split","at","addControl","on","removeControl","off"],"sources":["C:/Users/Larix/Documents/Programmieren/ABSCHLUSS/wbs-final-box-fe/src/components/MapSearch.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport { OpenStreetMapProvider, GeoSearchControl } from \"leaflet-geosearch\";\r\nimport \"leaflet-geosearch/dist/geosearch.css\";\r\n\r\nexport default function MapSearch({ setNewBoxData }) {\r\n    const map = useMap();\r\n\r\n    const provider = new OpenStreetMapProvider();\r\n\r\n    const search = new GeoSearchControl({\r\n        provider,\r\n        notFoundMessage: \"Sorry, that address could not be found.\",\r\n        style: \"bar\",\r\n        //   style: \"button\"\r\n    });\r\n\r\n    const onShowLocation = (result) => {\r\n        if (result) {\r\n            const { x, y, label } = result.location;\r\n            setNewBoxData((prevData) => {\r\n                return {\r\n                    ...prevData,\r\n                    boxLocationX: x,\r\n                    boxLocationY: y,\r\n                    boxLocationCity: label.split(\", \").at(0),\r\n                };\r\n            });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        map.addControl(search);\r\n\r\n        map.on(\"geosearch/showlocation\", onShowLocation);\r\n\r\n        return () => {\r\n            map.removeControl(search);\r\n\r\n            map.off(\"geosearch/showlocation\");\r\n        };\r\n    }, []);\r\n\r\n    return null;\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,qBAAT,EAAgCC,gBAAhC,QAAwD,mBAAxD;AACA,OAAO,sCAAP;AAEA,eAAe,SAASC,SAAT,OAAsC;EAAA;;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EACjD,MAAMC,GAAG,GAAGL,MAAM,EAAlB;EAEA,MAAMM,QAAQ,GAAG,IAAIL,qBAAJ,EAAjB;EAEA,MAAMM,MAAM,GAAG,IAAIL,gBAAJ,CAAqB;IAChCI,QADgC;IAEhCE,eAAe,EAAE,yCAFe;IAGhCC,KAAK,EAAE,KAHyB,CAIhC;;EAJgC,CAArB,CAAf;;EAOA,MAAMC,cAAc,GAAIC,MAAD,IAAY;IAC/B,IAAIA,MAAJ,EAAY;MACR,MAAM;QAAEC,CAAF;QAAKC,CAAL;QAAQC;MAAR,IAAkBH,MAAM,CAACI,QAA/B;MACAX,aAAa,CAAEY,QAAD,IAAc;QACxB,OAAO,EACH,GAAGA,QADA;UAEHC,YAAY,EAAEL,CAFX;UAGHM,YAAY,EAAEL,CAHX;UAIHM,eAAe,EAAEL,KAAK,CAACM,KAAN,CAAY,IAAZ,EAAkBC,EAAlB,CAAqB,CAArB;QAJd,CAAP;MAMH,CAPY,CAAb;IAQH;EACJ,CAZD;;EAcAtB,SAAS,CAAC,MAAM;IACZM,GAAG,CAACiB,UAAJ,CAAef,MAAf;IAEAF,GAAG,CAACkB,EAAJ,CAAO,wBAAP,EAAiCb,cAAjC;IAEA,OAAO,MAAM;MACTL,GAAG,CAACmB,aAAJ,CAAkBjB,MAAlB;MAEAF,GAAG,CAACoB,GAAJ,CAAQ,wBAAR;IACH,CAJD;EAKH,CAVQ,EAUN,EAVM,CAAT;EAYA,OAAO,IAAP;AACH;;GAvCuBtB,S;UACRH,M;;;KADQG,S"},"metadata":{},"sourceType":"module"}